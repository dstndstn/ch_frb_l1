version: 2
jobs:
  build:
    docker:
      - image: ubuntu:xenial
    # environment:
    #   # ugh no this is terrible... "y" -> "true", etc
    #   # LIBDIR: ~/chime/lib

    steps:
      - checkout
      - run:
          name: Tell me about your CPUs
          command: cat /proc/cpuinfo
      - run:
          name: Ubuntu packages
          command: apt update && apt install -y liblz4-dev libyaml-cpp-dev libboost-dev libjsoncpp-dev python-numpy libfftw3-dev libhdf5-serial-dev libzmq3-dev python-pip git g++ make wget tar libcurl4-openssl-dev libjsoncpp-dev pkg-config libpng16-dev
      - run:
          name: Pip packages
          command: pip2 install cpp-coveralls Cython pyzmq msgpack-python

      - run:
          name: Setup Environment Variables
          command: |
            #### CIRCLE_WORKING_DIRECTORY is ~/project, which isn't always expanded into /root/project...
            echo "export BASE=${CIRCLE_WORKING_DIRECTORY}" >> $BASH_ENV
            echo "export LIBDIR=~/chime/lib" >> $BASH_ENV
            echo "export INCDIR=~/chime/include" >> $BASH_ENV
            echo "export BINDIR=~/chime/bin" >> $BASH_ENV
            echo 'export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${LIBDIR}' >> $BASH_ENV
            echo "export NUMPY_INCDIR=$(python -c 'import numpy; print(numpy.get_include())')" >> $BASH_ENV
            echo "export PYTHONPATH=${PYTHONPATH}:/usr/lib/python2.7/dist-packages" >> $BASH_ENV
            echo 'export MSGPACK_CFLAGS=-I${BASE}/msgpack-2.1.0/include' >> $BASH_ENV
            echo "export MSGPACK_LFLAGS=" >> $BASH_ENV
            echo "export HAVE_PSRFITS=n" >> $BASH_ENV
            echo "export HAVE_HDF5=y" >> $BASH_ENV
            echo "export HAVE_CH_FRB_IO=y" >> $BASH_ENV
            echo "export HAVE_BONSAI=y" >> $BASH_ENV
            echo "export HAVE_SIMPULSE=y" >> $BASH_ENV
            echo "export HAVE_PNG=y" >> $BASH_ENV
            echo "export HAVE_JSONCPP=y" >> $BASH_ENV
            echo "export PYDIR=~/chime/lib/python2.7/site-packages" >> $BASH_ENV
            echo "export PYTHON_INCDIR=/usr/include/python2.7" >> $BASH_ENV
            echo "BASH ENV:"
            cat $BASH_ENV
      - run:
          name: msgpack
          command: |
            pwd
            wget https://github.com/msgpack/msgpack-c/releases/download/cpp-2.1.0/msgpack-2.1.0.tar.gz
            tar xzf msgpack-2.1.0.tar.gz
            ls msgpack-2.1.0/include || true
            ls /root/project/msgpack-2.1.0/include || true
            ls ${CIRCLE_WORKING_DIRECTORY}/msgpack-2.1.0/include || true
            ls ~/project/msgpack-2.1.0/include || true

      - run:
          name: simd_helpers, simpulse, sp_hdf5
          command: |
            set
            env
            cd $BASE
            git clone https://github.com/kmsmith137/simd_helpers.git
            cd simd_helpers
            ln -s site/Makefile.local.norootprivs Makefile.local
            make install
            cd $BASE
            git clone https://github.com/kmsmith137/simpulse.git
            cd simpulse
            ln -s site/Makefile.local.frb-compute-0 Makefile.local
            make
            make install
            cd $BASE
            git clone https://github.com/kmsmith137/sp_hdf5.git
            cd sp_hdf5
            ln -s site/Makefile.local.linux Makefile.local
            make install
            cd
      - run:
          name: ch_frb_io
          command: |
            pwd
            ls ${BASE}/msgpack-2.1.0/include || true
            git clone https://github.com/CHIMEFRB/ch_frb_io.git
            cd ch_frb_io
            git checkout circleci
            ln -s site/Makefile.local.frb-compute-0 Makefile.local
            make -j4
            make install
      - run:
          name: rf_kernels
          command: |
            cd
            git clone https://github.com/kmsmith137/rf_kernels.git
            cd rf_kernels
            ln -s site/Makefile.local.travis Makefile.local
            make -j4
            make install
      - run:
          name: bonsai
          command: |
            pwd
            wget -O bonsai.tgz http://broiler.astrometry.net/~dstn/temp/bonsai-circleci-2018-11-18.tgz
            tar xzf bonsai.tgz
            cd bonsai
            ln -s site/Makefile.local.frb-compute-0 Makefile.local
            ###
            #echo CIRCLE_WORKING_DIRECTORY: ${CIRCLE_WORKING_DIRECTORY}
            #ls ${CIRCLE_WORKING_DIRECTORY}
            #cp ${CIRCLE_WORKING_DIRECTORY}/bonsai-Makefile Makefile
            ls ${BASE} || true
            cp ${BASE}/bonsai-Makefile Makefile
            ###
            ls ~/chime/lib || true
            echo $LD_LIBRARY_PATH
            make #-j4
            make install
      - run:
          name: rf_pipelines
          command: |
            pwd
            git clone https://github.com/kmsmith137/rf_pipelines.git
            cd rf_pipelines
            git checkout circleci
            ln -s site/Makefile.local.frb-compute-0 Makefile.local
            make -j4
            make install
